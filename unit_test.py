import unittest
import jc
import jieba
import logging

class Test_Sim(unittest.TestCase):
    def setUp(self) -> None:
        print("test start")
    def tearDown(self) -> None:
        print("test over!")
    def test_add(self):
        doc1 = open('sim_0.8/orig.txt', 'r', encoding='utf-8').read()
        doc2 = open('sim_0.8/orig_0.8_add.txt', 'r', encoding='utf-8').read()
        doc1 = jc.dec_stopwords(doc1)
        doc2 = jc.dec_stopwords(doc2)
        doc_1 = " ".join(doc1)
        doc_2 = " ".join(doc2)
        xx = jc.sim_value(doc_1, doc_2)
        print(xx)
        self.assertGreaterEqual(xx, 0)
        self.assertLessEqual(xx, 1)
    def test_del(self):
        doc1 = open('sim_0.8/orig.txt', 'r', encoding='utf-8').read()
        doc2 = open('sim_0.8/orig_0.8_del.txt', 'r', encoding='utf-8').read()
        doc1 = jc.dec_stopwords(doc1)
        doc2 = jc.dec_stopwords(doc2)
        doc_1 = " ".join(doc1)
        doc_2 = " ".join(doc2)
        xx = jc.sim_value(doc_1, doc_2)
        print(xx)
        self.assertGreaterEqual(xx, 0)
        self.assertLessEqual(xx, 1)
    def test_dis1(self):
        doc1 = open('sim_0.8/orig.txt', 'r', encoding='utf-8').read()
        doc2 = open('sim_0.8/orig_0.8_dis_1.txt', 'r', encoding='utf-8').read()
        doc1 = jc.dec_stopwords(doc1)
        doc2 = jc.dec_stopwords(doc2)
        doc_1 = " ".join(doc1)
        doc_2 = " ".join(doc2)
        xx = jc.sim_value(doc_1, doc_2)
        print(xx)
        self.assertGreaterEqual(xx, 0)
        self.assertLessEqual(xx, 1)
    def test_dis3(self):
        doc1 = open('sim_0.8/orig.txt', 'r', encoding='utf-8').read()
        doc2 = open('sim_0.8/orig_0.8_dis_3.txt', 'r', encoding='utf-8').read()
        doc1 = jc.dec_stopwords(doc1)
        doc2 = jc.dec_stopwords(doc2)
        doc_1 = " ".join(doc1)
        doc_2 = " ".join(doc2)
        xx = jc.sim_value(doc_1, doc_2)
        print(xx)
        self.assertGreaterEqual(xx, 0)
        self.assertLessEqual(xx, 1)
    def test_dis7(self):
        doc1 = open('sim_0.8/orig.txt', 'r', encoding='utf-8').read()
        doc2 = open('sim_0.8/orig_0.8_dis_7.txt', 'r', encoding='utf-8').read()
        doc1 = jc.dec_stopwords(doc1)
        doc2 = jc.dec_stopwords(doc2)
        doc_1 = " ".join(doc1)
        doc_2 = " ".join(doc2)
        xx = jc.sim_value(doc_1, doc_2)
        print(xx)
        self.assertGreaterEqual(xx, 0)
        self.assertLessEqual(xx, 1)
    def test_dis10(self):
        doc1 = open('sim_0.8/orig.txt', 'r', encoding='utf-8').read()
        doc2 = open('sim_0.8/orig_0.8_dis_10.txt', 'r', encoding='utf-8').read()
        doc1 = jc.dec_stopwords(doc1)
        doc2 = jc.dec_stopwords(doc2)
        doc_1 = " ".join(doc1)
        doc_2 = " ".join(doc2)
        xx = jc.sim_value(doc_1, doc_2)
        print(xx)
        self.assertGreaterEqual(xx, 0)
        self.assertLessEqual(xx, 1)

    def test_dis15(self):
        doc1 = open('sim_0.8/orig.txt', 'r', encoding='utf-8').read()
        doc2 = open('sim_0.8/orig_0.8_dis_15.txt', 'r', encoding='utf-8').read()
        doc1 = jc.dec_stopwords(doc1)
        doc2 = jc.dec_stopwords(doc2)
        doc_1 = " ".join(doc1)
        doc_2 = " ".join(doc2)
        xx = jc.sim_value(doc_1, doc_2)
        print(xx)
        self.assertGreaterEqual(xx, 0)
        self.assertLessEqual(xx, 1)
    def test_mix(self):
        doc1 = open('sim_0.8/orig.txt', 'r', encoding='utf-8').read()
        doc2 = open('sim_0.8/orig_0.8_mix.txt', 'r', encoding='utf-8').read()
        doc1 = jc.dec_stopwords(doc1)
        doc2 = jc.dec_stopwords(doc2)
        doc_1 = " ".join(doc1)
        doc_2 = " ".join(doc2)
        xx = jc.sim_value(doc_1, doc_2)
        print(xx)
        self.assertGreaterEqual(xx, 0)
        self.assertLessEqual(xx, 1)
    def test_rep(self):
        doc1 = open('sim_0.8/orig.txt', 'r', encoding='utf-8').read()
        doc2 = open('sim_0.8/orig_0.8_rep.txt', 'r', encoding='utf-8').read()
        doc1 = jc.dec_stopwords(doc1)
        doc2 = jc.dec_stopwords(doc2)
        doc_1 = " ".join(doc1)
        doc_2 = " ".join(doc2)
        xx = jc.sim_value(doc_1, doc_2)
        print(xx)
        self.assertGreaterEqual(xx, 0)
        self.assertLessEqual(xx, 1)

    def test_xm(self):
        doc1 = open('sim_0.8/orig.txt', 'r', encoding='utf-8').read()
        doc2 = open('xm.txt', 'r', encoding='utf-8').read()
        doc1 = jc.dec_stopwords(doc1)
        doc2 = jc.dec_stopwords(doc2)
        doc_1 = " ".join(doc1)
        doc_2 = " ".join(doc2)
        xx = jc.sim_value(doc_1, doc_2)
        print(xx)
        self.assertGreaterEqual(xx, 0)
        self.assertLessEqual(xx, 1)
